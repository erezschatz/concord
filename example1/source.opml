<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>example1/index.html</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="example1/index.html">
		<outline text="&lt;!DOCTYPE html&gt;"></outline>
		<outline text="&lt;html&gt;">
			<outline text="&lt;head&gt;">
				<outline text="&lt;title&gt;Example 1&lt;/title&gt;"></outline>
				<outline text="&lt;meta name=&quot;copyright&quot; content=&quot;Copyright 2013-2014, Small Picture, Inc.&quot;&gt;"></outline>
				<outline isComment="true" text=""></outline>
				<outline isComment="true" text="&lt;script src=&quot;../libraries/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;  "></outline>
				<outline isComment="true" text="&lt;link href=&quot;../libraries/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;"></outline>
				<outline isComment="true" text="&lt;script src=&quot;../libraries/bootstrap.min.js&quot;&gt;&lt;/script&gt;"></outline>
				<outline isComment="true" text="&lt;link rel=&quot;stylesheet&quot; href=&quot;../concord.css&quot;/&gt;"></outline>
				<outline isComment="true" text="&lt;script src=&quot;../concord.js&quot;&gt;&lt;/script&gt;"></outline>
				<outline isComment="true" text="&lt;script src=&quot;../concordutils.js&quot;&gt;&lt;/script&gt;"></outline>
				<outline isComment="true" text="&lt;link rel=&quot;stylesheet&quot; href=&quot;../concordstyles.css&quot;&gt;"></outline>
				<outline isComment="true" text="&lt;link rel=&quot;stylesheet&quot; href=&quot;../libraries/fontAwesome.css&quot;&gt;"></outline>
				<outline isComment="true" text="&lt;link href=&quot;http://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css&quot; rel=&quot;stylesheet&quot;&gt;"></outline>
				<outline isComment="true" text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://scripting.com/code/fontawesome/5.12.0/css/all.css&quot;&gt;"></outline>
				<outline isComment="true" text=""></outline>
				<outline text="&lt;script src=&quot;../libraries/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;  "></outline>
				<outline text="&lt;link href=&quot;../libraries/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;"></outline>
				<outline text="&lt;script src=&quot;../libraries/bootstrap.min.js&quot;&gt;&lt;/script&gt;"></outline>
				<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;../libraries/fontAwesome/css/all.css&quot;&gt;"></outline>
				<outline text="&lt;script src=&quot;../concordutils.js&quot;&gt;&lt;/script&gt;"></outline>
				<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;../concordstyles.css&quot;&gt;"></outline>
				<outline text="&lt;script src=&quot;../concord.js&quot;&gt;&lt;/script&gt;"></outline>
				<outline text=""></outline>
				<outline text="&lt;script&gt;">
					<outline text="var appConsts = {">
						<outline text="&quot;productname&quot;: &quot;Hello&quot;,"></outline>
						<outline text="&quot;productnameForDisplay&quot;: &quot;Hello Outliner&quot;,"></outline>
						<outline text="&quot;domain&quot;: &quot;hello.blorkmark.com&quot;, "></outline>
						<outline text="&quot;version&quot;: &quot;0.5.3&quot;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="var appPrefs = {">
						<outline text="&quot;outlineFont&quot;: &quot;Arial&quot;, &quot;outlineFontSize&quot;: 16, &quot;outlineLineHeight&quot;: 24,"></outline>
						<outline text="&quot;authorName&quot;: &quot;&quot;, &quot;authorEmail&quot;: &quot;&quot;"></outline>
						<outline text="};"></outline>
						</outline>
					<outline text="var whenLastKeystroke = new Date (), whenLastAutoSave = new Date ();  "></outline>
					<outline text="var flReadOnly = false, flRenderMode = false;"></outline>
					<outline text="var cmdKeyPrefix = &quot;Ctrl+&quot;; "></outline>
					<outline text=""></outline>
					<outline text="var urlConcordSource = &quot;http://scripting.com/code/concord/repo/opml/concord.opml&quot;;"></outline>
					<outline text="var urlConcordCssSource = &quot;http://scripting.com/code/concord/repo/opml/concordstyles.opml&quot;;"></outline>
					<outline text="var urlConcordDocs = &quot;http://scripting.com/code/concord/repo/opml/concorddocs.opml&quot;;"></outline>
					<outline text="var urlWorknotes = &quot;http://scripting.com/code/concord/repo/opml/worknotes.opml&quot;;"></outline>
					<outline text="var urlConcordUtilsSource = &quot;http://scripting.com/code/concord/repo/opml/concordutils.opml&quot;;"></outline>
					<outline text="var urlExample0 = &quot;http://scripting.com/code/concord/repo/example0/source.opml&quot;;"></outline>
					<outline text="var urlHelloOutliner = &quot;http://scripting.com/code/concord/repo/example1/source.opml&quot;;"></outline>
					<outline text="var urlExample2 = &quot;http://scripting.com/code/concord/repo/example2/source.opml&quot;;"></outline>
					<outline text=""></outline>
					<outline text="function initLocalStorage () {">
						<outline text="if (localStorage.savedOpmltext == undefined) {">
							<outline text="localStorage.savedOpmltext = initialOpmltext;"></outline>
							<outline text="editSource (urlConcordDocs); //9/14/13 by DW"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="if (localStorage.ctOpmlSaves == undefined) {">
							<outline text="localStorage.ctOpmlSaves = 0;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="if (localStorage.whenLastSave == undefined) {">
							<outline text="localStorage.whenLastSave = new Date ().toString ();"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="if (localStorage.flTextMode == undefined) {">
							<outline text="localStorage.flTextMode = &quot;true&quot;;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function setInclude () { //used to test includes">
						<outline text="opSetOneAtt (&quot;type&quot;, &quot;include&quot;);"></outline>
						<outline text="opSetOneAtt (&quot;url&quot;, &quot;http://smallpicture.com/states.opml&quot;);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function editSource (url) {">
						<outline text="opXmlToOutline (initialOpmltext); //empty the outline display"></outline>
						<outline text="readText (url, function (opmltext, op) {">
							<outline text="opXmlToOutline (opmltext);"></outline>
							<outline text="saveOutlineNow ();"></outline>
							<outline text="}, undefined, true);"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function nukeDom () {">
						<outline text="var summit, htmltext = &quot;&quot;, indentlevel = 0;"></outline>
						<outline text="$(defaultUtilsOutliner).concord ().op.visitToSummit (function (headline) {">
							<outline text="summit = headline;"></outline>
							<outline text="return (true);"></outline>
							<outline text="});"></outline>
							</outline>
						<outline text="var visitSub = function (sub) {">
							<outline text="if (sub.attributes.getOne (&quot;isComment&quot;) != &quot;true&quot;) { ">
								<outline text="htmltext += filledString (&quot;\t&quot;, indentlevel) + sub.getLineText () + &quot;\r\n&quot;"></outline>
								<outline text="if (sub.countSubs () &gt; 0) {">
									<outline text="indentlevel++;"></outline>
									<outline text="sub.visitLevel (visitSub); "></outline>
									<outline text="indentlevel--;"></outline>
									<outline text="}"></outline>
									</outline>
								<outline text="}"></outline>
								</outline>
							<outline text="};"></outline>
							</outline>
						<outline text="summit.visitLevel (visitSub);"></outline>
						<outline text=""></outline>
						<outline text="var t = new Object ();"></outline>
						<outline text="t.text = summit.getLineText ();"></outline>
						<outline text="htmltext = multipleReplaceAll (htmltext, t, false, &quot;&lt;&quot; + &quot;%&quot;, &quot;%&quot; + &quot;&gt;&quot;);"></outline>
						<outline text=""></outline>
						<outline text="document.open ();"></outline>
						<outline text="document.write (htmltext);"></outline>
						<outline text="document.write (&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;Hi mom!&lt;/body&gt;&lt;/html&gt;&quot;);"></outline>
						<outline text="document.close ();"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function opExpandCallback (parent) {">
						<outline isComment="true" text="Changes">
							<outline text="9/18/13; 10:47:02 AM by DW">
								<outline text="Fixed problems with include nodes. &quot;op&quot; undefined, should have been using &quot;parent.&quot;"></outline>
								</outline>
							</outline>
						<outline text="var type = parent.attributes.getOne (&quot;type&quot;), url = parent.attributes.getOne (&quot;url&quot;), xmlUrl = parent.attributes.getOne (&quot;xmlUrl&quot;);"></outline>
						<outline text="//link nodes">
							<outline text="if ((type == &quot;link&quot;) &amp;&amp; (url != undefined)) {">
								<outline text="window.open (url);"></outline>
								<outline text="return;"></outline>
								<outline text="}"></outline>
								</outline>
							</outline>
						<outline text="//rss nodes">
							<outline text="if ((type == &quot;rss&quot;) &amp;&amp; (xmlUrl != undefined)) {">
								<outline text="window.open (xmlUrl);"></outline>
								<outline text="return;"></outline>
								<outline text="}"></outline>
								</outline>
							</outline>
						<outline text="//include nodes">
							<outline text="if ((type == &quot;include&quot;) &amp;&amp; (url != undefined)) {">
								<outline text="parent.deleteSubs ();"></outline>
								<outline text="parent.clearChanged ();"></outline>
								<outline text="readText (url, function (opmltext, op) {">
									<outline text="op.insertXml (opmltext, right); "></outline>
									<outline text="op.clearChanged ();"></outline>
									<outline text="}, parent, true);"></outline>
									</outline>
								<outline text="}"></outline>
								</outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function opInsertCallback (headline) { ">
						<outline text="headline.attributes.setOne (&quot;created&quot;, new Date ().toUTCString ());"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function opCollapseCallback (parent) {">
						<outline text="if (parent.attributes.getOne (&quot;type&quot;) == &quot;include&quot;) {">
							<outline text="parent.deleteSubs ();"></outline>
							<outline text="parent.clearChanged ();"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function opHoverCallback (headline) { ">
						<outline text="var atts = headline.attributes.getAll (), s = &quot;&quot;;"></outline>
						<outline text="//set cursor to pointer if there's a url attribute -- 3/24/13  by DW">
							<outline text="if ((atts.url != undefined) || (atts.xmlUrl != undefined)) {">
								<outline text="document.body.style.cursor = &quot;pointer&quot;;"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="else {">
								<outline text="document.body.style.cursor = &quot;default&quot;;"></outline>
								<outline text="}"></outline>
								</outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function opCursorMovedCallback (headline) {">
						<outline text="}"></outline>
						</outline>
					<outline text="function opKeystrokeCallback (event) { ">
						<outline text="whenLastKeystroke = new Date (); "></outline>
						<outline text="console.log (&quot;opKeystrokeCallback: key == &quot; + event.which);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function runSelection () {">
						<outline text="var value = eval (opGetLineText ());"></outline>
						<outline text="opDeleteSubs ();"></outline>
						<outline text="opInsert (value, &quot;right&quot;);"></outline>
						<outline text="opGo (&quot;left&quot;, 1);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function setOutlinerPrefs (id, flRenderMode, flReadonly) { ">
						<outline text="$(id).concord ({">
							<outline text="&quot;prefs&quot;: {">
								<outline text="&quot;outlineFont&quot;: appPrefs.outlineFont, "></outline>
								<outline text="&quot;outlineFontSize&quot;: appPrefs.outlineFontSize, "></outline>
								<outline text="&quot;outlineLineHeight&quot;: appPrefs.outlineLineHeight,"></outline>
								<outline text="&quot;renderMode&quot;: flRenderMode,"></outline>
								<outline text="&quot;readonly&quot;: flReadonly,"></outline>
								<outline text="&quot;typeIcons&quot;: appTypeIcons"></outline>
								<outline text="},"></outline>
								</outline>
							<outline text="&quot;callbacks&quot;: {">
								<outline text="&quot;opInsert&quot;: opInsertCallback,"></outline>
								<outline text="&quot;opCursorMoved&quot;: opCursorMovedCallback,"></outline>
								<outline text="&quot;opExpand&quot;: opExpandCallback,"></outline>
								<outline text="&quot;opHover&quot;: opHoverCallback, "></outline>
								<outline text="&quot;opKeystroke&quot;: opKeystrokeCallback"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="});"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function saveOutlineNow () {">
						<outline text="localStorage.savedOpmltext = opOutlineToXml (appPrefs.authorName, appPrefs.authorEmail);"></outline>
						<outline text="localStorage.ctOpmlSaves++;"></outline>
						<outline text="opClearChanged ();"></outline>
						<outline text="console.log (&quot;saveOutlineNow: &quot; + localStorage.savedOpmltext.length + &quot; chars.&quot;);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function backgroundProcess () {">
						<outline text="if (opHasChanged ()) {">
							<outline text="if (secondsSince (whenLastKeystroke) &gt;= 1) { ">
								<outline text="saveOutlineNow ();"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="function startup () {">
						<outline text="initLocalStorage ();"></outline>
						<outline text="$(&quot;#idMenuProductName&quot;).text (appConsts.productname);"></outline>
						<outline text="$(&quot;#idProductVersion&quot;).text (&quot;v&quot; + appConsts.version);"></outline>
						<outline text="//init menu keystrokes">
							<outline text="if (navigator.platform.toLowerCase ().substr (0, 3) == &quot;mac&quot;) {">
								<outline text="cmdKeyPrefix = &quot;&amp;#8984;&quot;;"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="$(&quot;#idMenubar .dropdown-menu li&quot;).each (function () {">
								<outline text="var li = $(this);"></outline>
								<outline text="var liContent = li.html ();"></outline>
								<outline text="liContent = liContent.replace (&quot;Cmd-&quot;, cmdKeyPrefix);"></outline>
								<outline text="li.html (liContent);"></outline>
								<outline text="});"></outline>
								</outline>
							</outline>
						<outline text="setOutlinerPrefs (&quot;#outliner&quot;, true, false); //9/20/13 by DW -- change initial value for renderMode from false to true"></outline>
						<outline text="opSetFont (appPrefs.outlineFont, appPrefs.outlineFontSize, appPrefs.outlineLineHeight); "></outline>
						<outline text="opXmlToOutline (localStorage.savedOpmltext);"></outline>
						<outline text="self.setInterval (function () {backgroundProcess ()}, 1000); //call every second"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="&lt;/script&gt;"></outline>
					</outline>
				<outline text="&lt;style&gt;">
					<outline text="body {">
						<outline text="background-color: whitesmoke;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text=".divOutlinerContainer { ">
						<outline text="width: 75%;"></outline>
						<outline text="margin-top: 75px;"></outline>
						<outline text="margin-left: auto;"></outline>
						<outline text="margin-right: auto;"></outline>
						<outline text="border:1px solid gainsboro;"></outline>
						<outline text="min-height: 550px;"></outline>
						<outline text="max-height: 800px;"></outline>
						<outline text="overflow: auto;"></outline>
						<outline text="padding: 6px;"></outline>
						<outline text="background-color: white;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text=".divSubtext {">
						<outline text="width: 65%;"></outline>
						<outline text="margin-top: 3px;"></outline>
						<outline text="margin-left: auto;"></outline>
						<outline text="margin-right: auto;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="/* menubar */">
						<outline text=".divMenubar .container { ">
							<outline text="margin-left: auto;"></outline>
							<outline text="margin-right: auto;"></outline>
							<outline text="width: 940px;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".divMenubar .navbar .nav &gt; li &gt; a { ">
							<outline text="font-size: 15px;"></outline>
							<outline text="color: black;"></outline>
							<outline text="padding-top: 12px;"></outline>
							<outline text="padding-left: 8px; padding-right: 8px; //6/3/13 by DW"></outline>
							<outline text="outline: none !important;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".dropdown-menu &gt; li &gt; a {">
							<outline text="cursor: pointer;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".navbar-inner { ">
							<outline text="-moz-border-radius: 0;"></outline>
							<outline text="-moz-border-radius: none; "></outline>
							<outline text="-moz-box-shadow: none; "></outline>
							<outline text="background-image: none; "></outline>
							<outline text="border-radius: 0;  "></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".divMenubar .brand { ">
							<outline text="margin-top: 0;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".divMenubar .nav li {">
							<outline text="font-family: Arial;"></outline>
							<outline text="font-size: 14px;"></outline>
							<outline text="font-weight: bold;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".menuKeystroke {">
							<outline text="float: right;"></outline>
							<outline text="margin-left: 25px;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=".menuKeystroke:before {">
							<outline text="content: &quot;&quot;;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=" #idMenuProductName {">
							<outline text="font-family: &quot;Arial&quot;;"></outline>
							<outline text="font-size: 24px;"></outline>
							<outline text="font-weight: bold;"></outline>
							<outline text="font-style: italic;"></outline>
							<outline text="}"></outline>
							</outline>
						</outline>
					<outline text="&lt;/style&gt;"></outline>
					</outline>
				<outline text="&lt;/head&gt;"></outline>
				</outline>
			<outline text="&lt;body&gt;">
				<outline text="&lt;div class=&quot;divForkMe&quot;&gt;">
					<outline text="&lt;a href=&quot;http://github.com/scripting/concord&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; right: 0; border: 0; z-index: 1050;&quot; src=&quot;http://s3.amazonaws.com/github/ribbons/forkme_right_red_aa0000.png&quot; alt=&quot;Fork me on GitHub&quot;&gt;&lt;/a&gt;"></outline>
					<outline text="&lt;/div&gt;"></outline>
					</outline>
				<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;">
					<outline text="&lt;div class=&quot;topbar-wrapper&quot; style=&quot;z-index: 0; opacity: 1;&quot;&gt;">
						<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
							<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
								<outline text="&lt;div class=&quot;container&quot;&gt;">
									<outline text="&lt;a class=&quot;brand&quot; href=&quot;/&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;&lt;/span&gt;&lt;/a&gt;"></outline>
									<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;">
										<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idOutlinerMenu&quot;&gt; ">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Outliner&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"></outline>
											<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpand ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-,&lt;/span&gt;Expand&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandAllLevels ();&quot;&gt;Expand All Subs&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandEverything ();&quot;&gt;Expand Everything&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text=""></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapse ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-.&lt;/span&gt;Collapse&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapseEverything ();&quot;&gt;Collapse Everything&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text=""></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (up, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-U&lt;/span&gt;Move Up&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (down, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-D&lt;/span&gt;Move Down&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (left, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-L&lt;/span&gt;Move Left&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (right, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-R&lt;/span&gt;Move Right&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text=""></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opPromote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-[&lt;/span&gt;Promote&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;opDemote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-]&lt;/span&gt;Demote&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text=""></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;runSelection ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-/&lt;/span&gt;Run Selection&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleComment ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-\&lt;/span&gt;Toggle Comment&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text=""></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleRenderMode ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-`&lt;/span&gt;Toggle Render Mode&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;/ul&gt;"></outline>
												</outline>
											<outline text="&lt;/li&gt;"></outline>
											</outline>
										<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idSourceMenu&quot;&gt; ">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Source&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"></outline>
											<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlWorknotes);&quot;&gt;Worknotes&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlExample0);&quot;&gt;Example 0&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlHelloOutliner);&quot;&gt;Example 1&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlExample2);&quot;&gt;Example 2&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlConcordSource);&quot;&gt;Concord&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlConcordCssSource);&quot;&gt;Concord CSS&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlConcordUtilsSource);&quot;&gt;Concord Utils&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;editSource (urlConcordDocs);&quot;&gt;Concord Docs&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a onclick=&quot;nukeDom ();&quot;&gt;Nuke the DOM&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;/ul&gt;"></outline>
												</outline>
											<outline text="&lt;/li&gt;"></outline>
											</outline>
										<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idDocsMenu&quot;&gt;">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Links&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"></outline>
											<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
												<outline text="&lt;li&gt;&lt;a href=&quot;http://docs.fargo.io/outlinerHowto&quot; target=&quot;_blank&quot;&gt;Outliner Howto&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a href=&quot;http://github.com/scripting/concord&quot; target=&quot;_blank&quot;&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/smallpicture-concord&quot; target=&quot;_blank&quot;&gt;Mail List&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;/ul&gt;"></outline>
												</outline>
											<outline text="&lt;/li&gt;"></outline>
											</outline>
										<outline text="&lt;/ul&gt;"></outline>
										</outline>
									<outline text="&lt;ul class=&quot;nav pull-right&quot;&gt;">
										<outline text="&lt;li&gt;">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idProductVersion&quot;&gt;&lt;/span&gt;&lt;/a&gt;"></outline>
											<outline text="&lt;/li&gt;"></outline>
											</outline>
										<outline text="&lt;li class=&quot;dropdown&quot;&gt;">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idProductVersion&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"></outline>
											<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
												<outline text="&lt;li&gt;&lt;a href=&quot;http://github.com/scripting/concord&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;"></outline>
												<outline text="&lt;/ul&gt;"></outline>
												</outline>
											<outline text="&lt;/li&gt;"></outline>
											</outline>
										<outline text="&lt;/ul&gt;"></outline>
										</outline>
									<outline text="&lt;/div&gt;"></outline>
									</outline>
								<outline text="&lt;/div&gt;"></outline>
								</outline>
							<outline text="&lt;/div&gt;"></outline>
							</outline>
						<outline text="&lt;/div&gt;"></outline>
						</outline>
					<outline text="&lt;/div&gt;"></outline>
					</outline>
				<outline text="&lt;div class=&quot;divOutlinerContainer&quot;&gt;">
					<outline text="&lt;div id=&quot;outliner&quot;&gt;">
						<outline text="&lt;/div&gt;"></outline>
						</outline>
					<outline text="&lt;/div&gt;"></outline>
					</outline>
				<outline text="&lt;div class=&quot;divSubtext&quot;&gt;">
					<outline text="&lt;p&gt;This is the outliner at the core of &lt;a href=&quot;http://fargo.io/&quot;&gt;Fargo&lt;/a&gt;. All the outline operations work. The outline is saved as you work in HTML 5 localStorage. The full source and docs are on &lt;a href=&quot;http://github.com/scripting/concord&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;"></outline>
					<outline text="&lt;/div&gt;"></outline>
					</outline>
				<outline text="&lt;script&gt;">
					<outline text="$(document).ready (function () {">
						<outline text="startup ();"></outline>
						<outline text="});"></outline>
						</outline>
					<outline text="&lt;/script&gt;"></outline>
					</outline>
				<outline text="&lt;/body&gt;"></outline>
				</outline>
			<outline text="&lt;/html&gt;"></outline>
			</outline>
		</body>
	</opml>
